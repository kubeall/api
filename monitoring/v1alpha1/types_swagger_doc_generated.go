/*
Copyright 2022 The kubeall.com Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-generated-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ProjectArchitecture = map[string]string{
	"": "ProjectArchitecture is the Schema for the projectarchitectures API",
}

func (ProjectArchitecture) SwaggerDoc() map[string]string {
	return map_ProjectArchitecture
}

var map_ProjectArchitectureList = map[string]string{
	"": "ProjectArchitectureList contains a list of ProjectArchitecture",
}

func (ProjectArchitectureList) SwaggerDoc() map[string]string {
	return map_ProjectArchitectureList
}

var map_ProjectArchitectureSpec = map[string]string{
	"":                      "ProjectArchitectureSpec defines the desired state of ProjectArchitecture",
	"description":           "Project Description",
	"services":              "Project's services relation, key is service name",
	"prometheusInformation": "project's metrics prometheus information",
	"scrapeInterval":        "metrics scrape interval",
	"scrapeLength":          "metrics scrape length, default one hour",
}

func (ProjectArchitectureSpec) SwaggerDoc() map[string]string {
	return map_ProjectArchitectureSpec
}

var map_ProjectArchitectureStatus = map[string]string{
	"":                 "ProjectArchitectureStatus defines the observed state of ProjectArchitecture",
	"hash":             "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"make\" to regenerate code after modifying this file",
	"prometheusStatus": "prometheus health check",
	"timestamp":        "scrape timestamp",
	"service":          "project service, key is service name",
}

func (ProjectArchitectureStatus) SwaggerDoc() map[string]string {
	return map_ProjectArchitectureStatus
}

var map_ProjectService = map[string]string{
	"":                    "Project service",
	"name":                "Service Name",
	"category":            "Service type",
	"icon":                "frontend icon display",
	"annotations":         "annotations",
	"description":         "service description",
	"projectServiceItems": "service item,map key is service version",
}

func (ProjectService) SwaggerDoc() map[string]string {
	return map_ProjectService
}

var map_ProjectServiceItem = map[string]string{
	"name":             "Service Name",
	"description":      "service description",
	"deployPath":       "DeployPath if server deployed in same namespace with ProjectArchitecture instance, deployPath is kind eg: [Deployment] if service deployed in cluster other namespace, name has prefix with ClusterNamespace., eg: ClusterNamespace.[default].[Deployment] if server deployed in other cluster's namespace, name has External with ExternalClusterNamespace, eg: ExternalClusterNamespace.[clustercode].[default].[Deployment] if server is deployed in other system, name has prefix External. ,eg: External",
	"annotations":      "annotations",
	"serviceRelations": "service relation",
	"metrics":          "metrics",
}

func (ProjectServiceItem) SwaggerDoc() map[string]string {
	return map_ProjectServiceItem
}

var map_PrometheusInfo = map[string]string{
	"address":         "prometheus",
	"token":           "prometheus token path or value, defult is pod sa token path",
	"configMapKeyRef": "Selects a key of a ConfigMap.",
	"secretKeyRef":    "Selects a key of a secret in the pod's namespace",
}

func (PrometheusInfo) SwaggerDoc() map[string]string {
	return map_PrometheusInfo
}

var map_ServiceItemMetricsStatus = map[string]string{
	"name":        "metrics name",
	"description": "metrics description",
	"vectorData":  "metrics data",
	"error":       "prometheus response error",
	"queryType":   "Query Type",
	"unit":        "Metrics Unit",
	"prometheus":  "prometheus address",
}

func (ServiceItemMetricsStatus) SwaggerDoc() map[string]string {
	return map_ServiceItemMetricsStatus
}

var map_ServiceItemStatus = map[string]string{
	"":        "ServiceItemStatus one service version metrics",
	"metrics": "key is metrics name",
}

func (ServiceItemStatus) SwaggerDoc() map[string]string {
	return map_ServiceItemStatus
}

var map_ServiceMetrics = map[string]string{
	"name":          "metrics name",
	"description":   "metrics description",
	"promQl":        "Metrics PromQL",
	"queryType":     "Query Type",
	"unit":          "Metrics Unit",
	"prometheusRef": "prometheus relation information",
}

func (ServiceMetrics) SwaggerDoc() map[string]string {
	return map_ServiceMetrics
}

var map_ServiceMetricsStatus = map[string]string{
	"":      "ServiceMetricsStatus defines project service diff versions",
	"items": "key is service version",
}

func (ServiceMetricsStatus) SwaggerDoc() map[string]string {
	return map_ServiceMetricsStatus
}

var map_ServiceRelation = map[string]string{
	"targetRef":     "Project Service Name",
	"targetVersion": "target service version",
	"protocol":      "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.",
	"port":          "The port that will be exposed by this service.",
	"annotations":   "annotations",
}

func (ServiceRelation) SwaggerDoc() map[string]string {
	return map_ServiceRelation
}

// AUTO-GENERATED FUNCTIONS END HERE
