/*
Copyright 2022 The kubeall.com Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.kubeall.api.cluster.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/kubeall/api/cluster/v1alpha1";

// Cluster is the schema for the clusters API
message Cluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterSpec spec = 2;

  optional ClusterStatus status = 3;
}

message ClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Cluster items = 2;
}

message ClusterNamespace {
  optional string cluster = 1;

  repeated string namespaces = 2;
}

message ClusterSpec {
  // Provider of the cluster: Openshift, Kubernetes, or other cloud providers
  optional string provider = 1;

  // cluster category, such as: Strict、NonStrict、Dev、Test、Pro
  optional string category = 2;

  //  cluster description
  optional string description = 3;

  // cluster code
  optional string code = 4;

  // kubernetes
  // +optional
  optional string kubeconfig = 5;

  // Cert Data
  // +optional
  optional string certData = 6;

  // +optional
  optional string token = 7;

  // cluster master url
  // +optional
  optional string master = 8;
}

message ClusterStatus {
  optional bool healthy = 1;

  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastCheck = 2;

  // kubernetes version
  optional Info version = 3;
}

// Workspace is the Schema for the namespacegroups API
message Workspace {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional WorkspaceSpec spec = 2;

  optional WorkspaceStatus status = 3;
}

// WorkspaceList contains a list of Workspace
message WorkspaceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Workspace items = 2;
}

message WorkspaceSpec {
  // workspace code
  // +kubebuilder:validation:Required
  optional string code = 3;

  // workspace description
  // +kubebuilder:validation:Required
  optional string description = 1;

  // select which namespace will join to this group
  optional string namespaceSelector = 2;
}

// WorkspaceStatus defines the observed state of Workspace
message WorkspaceStatus {
  // cluster's namespaces
  repeated ClusterNamespace clusterNamespaces = 1;
}

message Info {
  optional string major = 1;

  optional string minor = 2;

  optional string gitVersion = 3;

  optional string gitCommit = 4;

  optional string gitTreeState = 5;

  optional string buildDate = 6;

  optional string goVersion = 7;

  optional string compiler = 8;

  optional string platform = 9;
}

